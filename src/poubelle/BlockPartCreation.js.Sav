import React, { Component } from 'react';
import BlockPartTypeJs from "./BlockPartTypeJs";
import BlockPartDataJs from "./BlockPartDataJs";


class BlockPartCreation extends Component {
    constructor(props) {
        super(props);
        this.state = {
            typeValue:"",
            dataValue:"",
            childRefPartType: React.createRef(),
            childRefPartData: React.createRef()
        };


        //this.handleChangeType = this.handleChangeType.bind(this);
        this.handleChangeData = this.handleChangeData.bind(this);
        this.getType = this.getType.bind(this);
        this.getValue = this.getValue.bind(this);
        this.addClicked = this.addClicked.bind(this);

    }
/*
    handleChangeType(event){
        this.setState({ typeValue: event.target.value });
    }

 */
    handleChangeData(event) {
        this.setState({ dataValue: event.target.value });
    }

    getType(){
        //return this.state.typeValue;
        return this.state.childRefPartType.current.getType();
    }
    getValue(){
        return this.state.childRefPartData.current.getValue();
        //return this.state.dataValue;
    }
    addClicked(){
        console.log("addClicked");
        this.props.handleOnAddPart();
    }

    render() {
        return (
            <form>

                <br />
                <BlockPartTypeJs ref={this.state.childRefPartType}/>
                &nbsp;&nbsp;
                <BlockPartDataJs  ref={this.state.childRefPartData}/>



            </form>
        );
    }
}

export default BlockPartCreation;
